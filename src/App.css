.content{
  max-width: 1280px;
  margin: 0 auto;
padding: 2rem;}

* {
  box-sizing: border-box;
  margin: 0;
  
}

.padding-block {
  display: flex;
  text-align: center;
  font-size: 5vmax;
  justify-content: center;
  align-items: center;
  background-color: #ffffff;
  color: #000000;
}

.scroll-carousel {
  background-color: #fff;
}

.sticky-box {
  position: sticky;
  top: 0;
  overflow: hidden;
}

.transform-box {
  display: flex;
  will-change: transform;
}

.box {
  flex-shrink: 0;
  /* need to hardcode box sizes, else images loading throws off calculations */
  /* could be a job for imagesLoaded */
  width: 52rem;
  margin: 1rem 2rem;
}

.img { 
  border-radius: 16px;
}
.project-heading{
  font-size: 200px;
}
.toolbar{
  margin-left: auto;
  margin-right: auto;
  margin-top: 2rem;
}

@keyframes rolling {
  0%, 20% {
    transform: translate(0,-0.5em)
  }
  20%, 33%{
    transform: translate(0,-0.5em)
  }
  33%, 53% {
    transform: translate(0,-4.3em)
  }
  53%,66%{
    transform: translate(0,-4.3em)
  }
  66%, 86% {
    transform: translate(0,-8em)
  }
  86%,100%{
    transform: translate(0,-8em)
  }
}

.active{
  height:60px;
  overflow:hidden;
  text-align: left;

}
ul{
  transform: translate(0,-0.5em);
  animation: rolling 5s 1s ease-in-out forwards infinite alternate;
}

li{
  list-style-type: none;
  height: 60px;
  font-size: 3em;
}




@keyframes fadeInUp {
  from {
      transform: translate3d(0,40px,0)
  }

  to {
      transform: translate3d(0,0,0);
      opacity: 1
  }
}

@-webkit-keyframes fadeInUp {
  from {
      transform: translate3d(0,40px,0)
  }

  to {
      transform: translate3d(0,0,0);
      opacity: 1
  }
}

.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
  -webkit-animation-duration: 1s;
  -webkit-animation-fill-mode: both
}

.animatedFadeInUp {
  opacity: 0
}

.fadeInUp {
  opacity: 0;
  animation-name: fadeInUp;
  -webkit-animation-name: fadeInUp;
}
.hover-main{
  background-color: #4F3DFF;
  border-radius: 100%;
  display: grid;
  align-items: center;
  justify-items: center;
}
.hover-main img{
  position: absolute;
}
.main {
background-color: #00AE80; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  border-radius: 100%;
  display: grid;
  align-items: center;
  justify-items: center;
}

.main img {
  position: absolute;
}
.text {
  font-weight: 600;
  letter-spacing: 3.5px;
  font-size: 12px;
  fill: #ffffff;
}
.hover-text{
  font-size: 12px;
  letter-spacing: 3px;
}
#rotatingText {
  animation-name: rotate-circle;
  animation-duration: 10s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes rotate-circle {
  to {
    transform: rotate(1turn);
  }
}

.background-connect{
  background: url('./assets/images/paperplane.gif');
  background-size: cover; 
  background-position: top center;
}

.picture-outline:hover{
  outline-width: 5px;
  outline-offset: 8px;
}

.picture-outline{
  outline-width: 1px;
  outline-style: solid;
  outline-color: #4F3DFF;
  outline-offset: 4px;
  transition: outline-width linear 0.1s, outline-offset linear 0.1s;
}
.card{
  position: absolute;
}
.little-card{
  width: 18vmin;
  height: 18vmin;
  border-radius: 100%;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
  transition: transform 1s;
  z-index: -1;
}
.card-group:hover > .little-card:nth-child(1){
  transform: translate(50%,-300%) rotate(-15deg);
}
.card-group:hover > .little-card:nth-child(2){
  transform: translate(-50%,-315%) rotate(0deg);
}
.card-group:hover > .little-card:nth-child(3){
  transform: translate(-150%,-300%) rotate(15deg);
}

.circle {
  position: fixed;
  z-index: 100;
  display: flex;
  flex-flow: row;
  align-content: center;
  justify-content: center;
  top: 0;
  left: 0;
  background-color: black;
  pointer-events: none;
  color: #fff;
  text-align: center;
}

.cursorText {
  flex: auto;
  font-size: inherit;
  pointer-events: none;
  margin: auto;
}

.container {
  display: flex;
  flex-flow: row;
  width: 100vw;
  height: 100%;
  align-items: center;
  justify-content: space-around;
}

